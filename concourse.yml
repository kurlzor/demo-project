resource_types:
- name: kubernetes
  type: docker-image
  source:
    repository: zlabjp/kubernetes-resource
    tag: "1.9"
- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr

resources:
- name: demo-project
  type: git
  webhook_token: 573C9076AFA74928AFDAB4FE9E20E6AF
  source:
    uri: https://github.com/Evaneos/demo-project.git
    branch: master
- name: demo-project-pr
  type: pull-request
  source:
    access_token: 573C9076AFA74928AFDAB4FE9E20E6AF
    repo: Evaneos/demo-project
    base: master
- name: demo-project-docker-image
  type: docker-image
  source:
    repository: evaneos/demo-project
    username: ((docker-hub-username))
    password: ((docker-hub-password))

- name: intraneos-cluster
  type: kubernetes
  source:
    kubeconfig: ((kubeconfig))

jobs:
- name: test-pr
  plan:
    - get: demo-project-pr
      trigger: true
    - task: unit-tests
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: php, tag: 7.2.1-alpine}
        inputs:
        - name: demo-project
        run:
          path: sh
          args:
          - -exc
          - |
            curl -L -o /usr/local/bin/composer https://getcomposer.org/composer.phar
            chmod +x /usr/local/bin/composer
            composer global require hirak/prestissimo
            cd ./demo-project
            composer install
            ./vendor/bin/phpunit test
- name: unit-tests
  plan:
  - get: demo-project
    trigger: true
  - task: unit-tests
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: php, tag: 7.2.1-alpine}
      inputs:
      - name: demo-project
      run:
        path: sh
        args:
        - -exc
        - |
          curl -L -o /usr/local/bin/composer https://getcomposer.org/composer.phar
          chmod +x /usr/local/bin/composer
          composer global require hirak/prestissimo
          cd ./demo-project
          composer install
          ./vendor/bin/phpunit test

- name: build-docker-image
  plan:
  - get: demo-project
    passed:
    - unit-tests
    trigger: true
  - put: demo-project-docker-image
    params: {build: demo-project}

- name: deploy
  plan:
    - get: demo-project-docker-image
      passed:
      - build-docker-image
      trigger: true
    - put: intraneos-cluster
      params:
        kubectl: apply -f demo-project/infra
